SELECT team_name, points, win_count, draw_count, loss_count
FROM team NATURAL JOIN ( SELECT teams.team_name as team_name, 
IFNULL(team_wins.win_count, 0) win_count, 
IFNULL(team_draws.draw_count, 0) draw_count, IFNULL(team_losses.loss_count, 0) loss_count, 
IFNULL(team_wins.win_count, 0) * 3 + IFNULL(team_draws.draw_count, 0) points
FROM (  SELECT team_name FROM team_wins UNION
SELECT team_name FROM team_draws UNION
SELECT team_name FROM team_losses ) team
LEFT JOIN team_wins ON teams.team_name = team_wins.team_name
LEFT JOIN team_draws ON teams.team_name = team_draws.team_name
LEFT JOIN team_losses ON teams.team_name = team_losses.team_name 
WHERE team.league = 'universities' ) as points			 
ORDER BY points DESC;

DELIMITER $
CREATE TRIGGER update_matches_insert AFTER INSERT ON statistics
FOR EACH ROW
BEGIN 
IF match_id = NEW.match_id AND NEW.team_name = home_team AND NEW.type = 'goal' THEN
UPDATE matches 
SET home_score = home_score + NEW.value;
ELSEIF match_id = NEW.match_id AND NEW.team_name = guest_team AND NEW.type = 'goal' THEN
UPDATE matches 
SET guest_score = guest_score + NEW.value;
END IF;
END; $

DELIMITER $
CREATE TRIGGER update_matches_update AFTER UPDATE ON statistics
FOR EACH ROW
BEGIN 
IF match_id = NEW.match_id AND NEW.team_name = home_team AND NEW.type = 'goal' THEN
UPDATE matches 
SET home_score = home_score + NEW.value - OLD.value;
ELSEIF match_id = NEW.match_id AND NEW.team_name = guest_team AND NEW.type = 'goal' THEN
UPDATE matches 
SET guest_score = guest_score + NEW.value - OLD.value;
END IF;
END; $

SELECT home_team, home_score, guest_team, guest_score 
FROM matches, (SELECT team_name, league FROM team) as names
WHERE home_team = team_name AND names.league = 'Turkish League'







alter table offer add column status varchar(25) default 'ongoing';






INSERT into statistics (match_id, team_name, account_id, type, value) VALUES ('10', 'Fenerbahce', '5', 'goal', 2);











SELECT team_name, points, win_count, draw_count, loss_count 
FROM team NATURAL JOIN (SELECT teams.team_name as team_name, IFNULL(team_wins.win_count, 0) win_count, IFNULL(team_draws.draw_count, 0) draw_count, IFNULL(team_losses.loss_count, 0) loss_count, IFNULL(team_wins.win_count, 0)*3 + IFNULL(team_draws.draw_count, 0) points
FROM ( SELECT team_name FROM team_wins UNION 
SELECT team_name FROM team_draws UNION
SELECT team_name FROM team_losses ) teams 
left join team_wins on teams.team_name = team_wins.team_name
left join team_draws on teams.team_name = team_draws.team_name
left join team_losses on teams.team_name = team_losses.team_name) as all_standings
WHERE team.league = 'English PL'
ORDER BY points DESC;











